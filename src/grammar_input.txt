program -> stmtSeq

stmtSeq -> stmtSeq stmt
stmtSeq -> stmt

stmt -> exprStmt
stmt -> assignmentStmt
stmt -> ifStmt
stmt -> varDeclStmt
stmt -> funDefStmt
stmt -> forLoopStmt
stmt -> returnStmt

exprStmt -> expr Semi

assignmentStmt -> Identifier Assign exprStmt

ifStmt -> If expr LBrace stmtSeq RBrace elseTail
elseTail -> Else ifStmt
elseTail -> Else LBrace stmtSeq RBrace
elseTail ->

varDeclStmt -> Let assignmentStmt

funDefStmt -> Fn Identifier LParen paramSeq RParen returnDeclaration LBrace stmtSeq RBrace

returnStmt -> Return expr Semi

paramSeq -> param paramSeqTail
paramSeq ->
paramSeqTail -> Coma param paramSeqTail
paramSeqTail ->

param -> Identifier Colon typeSpecifier

returnDeclaration -> RArrow typeSpecifier
returnDeclaration ->

typeSpecifier -> U32
typeSpecifier -> I32
typeSpecifier -> F32
typeSpecifier -> U64
typeSpecifier -> I64
typeSpecifier -> F64
typeSpecifier -> U8
typeSpecifier -> Bool
typeSpecifier -> StringType
typeSpecifier -> Identifier

forLoopStmt -> For Identifier In expr LBrace stmtSeq RBrace

expr -> disjunction

disjunction -> conjunction Or disjunction
disjunction -> conjunction

conjunction -> inversion And conjunction
conjunction -> inversion

inversion -> Not inversion
inversion -> comparison

comparison -> sum relOperator sum
comparison -> sum

sum -> sum addOperator term
sum -> term

term -> term multOperator factor
term -> factor

factor -> primary
factor -> unaryOperator primary

primary -> callExpr 
primary -> atom

callExpr -> Identifier LParen argSeq RParen

argSeq -> arg argSeqTail
argSeq ->
argSeqTail -> Coma arg argSeqTail
argSeqTail ->

arg -> expr
arg -> Identifier Assign expr

atom -> Identifier
atom -> literal

relOperator -> Less
relOperator -> Greater
relOperator -> LessEqual
relOperator -> GreaterEqual
relOperator -> Equal
relOperator -> NotEqual

multOperator -> Star
multOperator -> Div

unaryOperator -> Minus

addOperator -> Plus 
addOperator -> Minus 

literal -> IntegerLiteral
literal -> FloatingLiteral
literal -> StringLiteral
literal -> booleanLiteral

booleanLiteral -> True
booleanLiteral -> False





    

